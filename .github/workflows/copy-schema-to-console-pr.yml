name: Copy app config schema
env:
  targetBaseBranch: "main"
  fileName: "file"
  targetRepo: "repob"
  targetUserName: "mivanyna"
  targetPathToFile: "folderb"

on:
  push:

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      repository-projects: write

    steps:
      - uses: actions/checkout@v3

      - name: Clone target repo
        run: |
          echo "pull target repository"

          git clone https://${{ env.targetUserName }}:${{ secrets.API_TOKEN_GITHUB }}@github.com/${{ env.targetUserName }}/${{ env.targetRepo }}.git target
          rm target/${{ env.targetPathToFile }}/${{ env.fileName }}*.json
          
          echo "copy and rename file to target folder"
      - name: Copy and rename file
        run: |   
          cp "${{ env.fileName }}.json" "./target/${{ env.targetPathToFile }}/${{ env.fileName }}_${{ github.sha }}.json"

      - name: Update usage file
        run: |
          cd target
          
          echo "update schema export file"
          printf "const file = require('./${{ env.fileName }}_${{ github.sha }}.json')
          export default file\n" > ${{ env.targetPathToFile }}/json.ts

      - name: Init user and push changed files
        run: |     
          cd target
          git status

          git config --local user.email "${{ github.event.commits[0].committer.email }}"
          git config --local user.name "${{ github.event.commits[0].committer.name }}"
          git checkout ${{ env.targetBaseBranch }}

          git checkout -b "${{ github.ref_name }}_${{ github.run_number }}"

          git add .
          git diff-index --quiet HEAD || git commit -m "Automatic copy app config schema"          
           echo "push changes"
          echo "create PR"
      - name:  PR url
        run: |
          git config --local user.email "${{ github.event.commits[0].committer.email }}"
          git config --local user.name "${{ github.event.commits[0].committer.name }}"
          gh pr list -s merged -S '${{github.sha}}'
          echo "gh pr list -s merged -S '${{github.sha}}'"
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
      - name: Create PR
        run: |
          cd target
          echo "$PR_URL"
          echo "${{env.PR_URL}}"
          echo "Created by Github action\n${{github.event.commits[0].url}}"
          gh pr list -s merged -S "${{github.sha}}"
          echo "gh pr list -s merged -S "${{github.sha}}"
          gh pr create -B "${{ env.targetBaseBranch }}" -H "${{ github.ref_name }}_${{ github.run_number }}" --title "${{ github.event.commits[0].message }}" --body "Created by Github action\n${{github.event.commits[0].url}}"
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
      
      

      
