name: Copy app config schema
env:
  targetBaseBranch: "main"
  fileName: "file"
  targetRepo: "mivanyna/repob"
  targetPathToFile: "folderb"

on:
  push:
    branches: [ "main" ]
permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      repository-projects: write

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: Copy config to cms and create PR
        run: |
          echo "pull target repository"
          git clone https://.:${{ secrets.GITHUB_TOKEN }}@github.com/${{ env.targetRepo }} target
          rm target/${{ env.targetPathToFile }}/${{ env.fileName }}*.json
          
          echo "copy and rename file to target folder"
          
          cp "${{ env.fileName }}.json" "./target/${{ env.targetPathToFile }}/${{ env.fileName }}_${{ github.sha }}.json"

          cd target
          
          echo "update schema export file"
          printf "const file = require('./${{ env.fileName }}_${{ github.sha }}.json')\nexport default file\n" > ${{ env.targetPathToFile }}/json.ts
          
          git status

          git config --local user.email "${{ github.event.commits[0].committer.email }}"
          git config --local user.name "${{ github.event.commits[0].committer.name }}"
          git checkout ${{ env.targetBaseBranch }}

          git checkout -b "${{ github.ref_name }}_${{ github.run_number }}"

          git add .
          git diff-index --quiet HEAD || git commit -m "Automatic copy app config schema"
          echo "push changes"
          git push -u origin "${{ github.ref_name }}_${{ github.run_number }}"
          echo "create PR"
          gh pr create -B "${{ env.targetBaseBranch }}" -H "${{ github.ref_name }}_${{ github.run_number }}" --title "${{ github.event.commits[0].message }}" --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}

      
